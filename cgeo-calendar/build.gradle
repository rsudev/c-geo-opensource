/*
 * cgeo calendar addon
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion project.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        // TODO fill this section and remove the values from AndroidManifest only after the full switch to gradle
        // As these values override the manifest, we might otherwise use different values in gradle and non-gradle builds.
    }

    packagingOptions {
    	// license files of libs are not needed in our APK
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', '../common/src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    lintOptions {
    	// generally we accept lint errors when building 
        abortOnError false
        
    	// abort release builds in case of FATAL errors
        checkReleaseBuilds true
    }
}


dependencies {
    // Apache Commons
    compile 'org.apache.commons:commons-lang3:3.4'

    // Null annotations
    compile 'org.eclipse.jdt:org.eclipse.jdt.annotation:1.1.0'
}


/*
 * signing of release APK, use a properties file like in templates/private.properties
 */

// dynamically load the signing values from private.properties
File privatePropertiesFile = rootProject.file('private.properties')
if (privatePropertiesFile.exists()) {
    Properties properties = new Properties()
    properties.load(new FileInputStream(privatePropertiesFile))
    android.signingConfigs {
        release {
            storeFile file(properties.getProperty('key.store'))
            storePassword properties.getProperty('key.store.password')
            keyAlias properties.getProperty('key.alias')
            keyPassword properties.getProperty('key.alias.password')
        }
    }
    android.buildTypes.release.signingConfig android.signingConfigs.release
}
